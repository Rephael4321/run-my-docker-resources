services:
    redpanda:
        container_name: kafka
        image: redpandadata/redpanda:latest
        command:
            - redpanda
            - start
            - --smp 1                  # single core
            - --memory 256M            # RAM limit
            - --overprovisioned        # disable some performance checks
            - --node-id 0
            - --check=false
            - --kafka-addr=PLAINTEXT://0.0.0.0:9092
            - --advertise-kafka-addr=PLAINTEXT://kafka:9092
        ports:
            - "9092:9092"
        healthcheck:
            test: ["CMD-SHELL", "rpk cluster info || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - default

    postgres:
        container_name: postgres
        image: postgres:17.4
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "myuser"]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - postgres_data:/var/lib/postgresql/data

    fastapi:
        container_name: fastapi
        ports:
            - "8888:8888"
        build:
            context: .
            dockerfile: fastapi/Dockerfile
        environment:
            ENVIRONMENT: "PROD"
        depends_on:
            redpanda:
                condition: service_healthy
            postgres:
                condition: service_healthy
        restart: on-failure

    manager:
        container_name: manager
        build:
            context: .
            dockerfile: manager/Dockerfile
        environment:
            OPENAI_API_KEY: ${OPENAI_API_KEY}
            ENVIRONMENT: "PROD"
        depends_on:
            redpanda:
                condition: service_healthy
            postgres:
                condition: service_healthy
        restart: on-failure

volumes:
    postgres_data:
